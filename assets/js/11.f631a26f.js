(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{405:function(t,a,s){"use strict";s.r(a);var e=s(3),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("vue 部分")]),t._v(" "),s("p",[t._v("vue 系列 https://juejin.cn/post/6961222829979697165?utm_source=gold_browser_extension")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#_1-mvc-和-mvvm"}},[t._v("1. mvc 和 mvvm")])]),s("li",[s("a",{attrs:{href:"#_2-font-color-red-size-6px-生命周期-font-的理解"}},[t._v("2. "),s("font",{attrs:{color:"red",size:"6px"}},[t._v("生命周期")]),t._v("的理解")],1)]),s("li",[s("a",{attrs:{href:"#_3-font-color-red-size-6px-data-font-为什么是一个函数"}},[t._v("3. "),s("font",{attrs:{color:"red",size:"6px"}},[t._v("data")]),t._v(" 为什么是一个函数")],1)]),s("li",[s("a",{attrs:{href:"#_4-双向数据绑定原理是什么-响应式原理又是啥-还有-v-model-原理"}},[t._v("4. 双向数据绑定原理是什么 响应式原理又是啥 还有 v-model 原理")])]),s("li",[s("a",{attrs:{href:"#_5-diff-算法"}},[t._v("5. diff 算法")])]),s("li",[s("a",{attrs:{href:"#_6-v-for-里的-key"}},[t._v("6. v-for 里的 key")])]),s("li",[s("a",{attrs:{href:"#_7-vue-router-钩子函数"}},[t._v("7. vue-router 钩子函数")])]),s("li",[s("a",{attrs:{href:"#_8-react-和-vue-的对比"}},[t._v("8. react 和 vue 的对比")])]),s("li",[s("a",{attrs:{href:"#_9-父子组件的生命周期"}},[t._v("9. 父子组件的生命周期")])]),s("li",[s("a",{attrs:{href:"#_10-组件间通讯"}},[t._v("10. 组件间通讯")])]),s("li",[s("a",{attrs:{href:"#_11-keep-alive"}},[t._v("11. keep-alive")])]),s("li",[s("a",{attrs:{href:"#_12-自定义指令"}},[t._v("12. 自定义指令")])]),s("li",[s("a",{attrs:{href:"#_13-修饰符有哪些"}},[t._v("13. 修饰符有哪些")])]),s("li",[s("a",{attrs:{href:"#_14-函数式组件使用场景和原理"}},[t._v("14. 函数式组件使用场景和原理")])]),s("li",[s("a",{attrs:{href:"#_15-vue-router-中常用的路由模式实现原理吗"}},[t._v("15. vue-router 中常用的路由模式实现原理吗")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"_1-mvc-和-mvvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-mvc-和-mvvm"}},[t._v("#")]),t._v(" 1. mvc 和 mvvm")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MVC")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("Model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("contorl 一句话描述就是 Controller 负责将 Model 的数据用 View 显示出来，换句话说就是在 Controller 里面把 Model 的数据赋值给 View。\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MVVM")]),t._v("：是Model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("View"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ViewModel的简写\n通过操纵 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("M")]),t._v("（模型层） 层 ，通过 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VM")]),t._v(" 层（数据劫持 和 虚拟"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("机制来实现）来实现 "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("V")]),t._v("（视图层） 层会自动跟着变化\n\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MVVM")]),t._v("设计模式的优点\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 低耦合。视图（View）可以独立于Model变化和修改\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 可重用性。你可以把一些视图逻辑放在一个ViewModel里面，让很多view重用这段视图逻辑。"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("可以组件式开发\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 自动更新"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("，减少直接对"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("的操作\n\n\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MVVM")]),t._v("设计模式的缺点\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("  数据绑定也使得bug很难被调试。比如你看到页面异常了，有可能是你的View的代码有bug，也可能是你的model的代码有问题。数据绑定使得一个位置的Bug被快速传递到别的位置，要定位原始出问题的地方就变得不那么容易了。\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("  数据双向绑定不利于代码重用。客户端开发最常用的是View，但是数据双向绑定技术，让你在一个View都绑定了一个model，不同的模块model都不同。那就不能简单重用view了\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("  一个大的模块中model也会很大，虽然使用方便了也很容易保证数据的一致性，但是长期持有，不释放内存就造成话费更多的内存。\n")])])]),s("h2",{attrs:{id:"_2-生命周期的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-生命周期的理解"}},[t._v("#")]),t._v(" 2. "),s("font",{attrs:{color:"red",size:"6px"}},[t._v("生命周期")]),t._v("的理解")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("vue 生命周期总共分为 8 个阶段: 创建前/后，载入前/后，更新前/后， 销毁前/后。")])]),t._v(" "),s("li",[s("p",[t._v("beforeCreate （创建前）vue 实例的挂载元素$el 和数据对象 data 都是 undefined, 还未初始化")])]),t._v(" "),s("li",[s("p",[t._v("created (创建后) 完成了 data 数据初始化, el 还未初始化")])]),t._v(" "),s("li",[s("p",[t._v("beforeMount (载入前) vue 实例的$el 和 data 都初始化了, 相关的 render 函数首次被调用。实例已完成以下的配置：编译模板，把 data 里面的数据和模板生成 html。注意此时还没有挂载 html 到页面上。")])]),t._v(" "),s("li",[s("p",[t._v("mounted (载入后) 在 el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用。实例已完成以下的配置：用上面编译好的 html 内容替换 el 属性指向的 DOM 对象。完成模板中的 html 渲染到 html 页面中。此过程中进行 ajax 交互")])]),t._v(" "),s("li",[s("p",[t._v("beforeUpdate (更新前) 在数据更新之前调用，发生在虚拟 DOM 重新渲染和打补丁之前。可以在该钩子中进一步地更改状态，不会触发附加的重渲染过程。")])]),t._v(" "),s("li",[s("p",[t._v("updated （更新后） 在由于数据更改导致的虚拟 DOM 重新渲染和打补丁之后调用。调用时，组件 DOM 已经更新，所以可以执行依赖于 DOM 的操作。然而在大多数情况下，应该避免在此期间更改状态，因为这可能会导致更新无限循环。该钩子在服务器端渲染期间不被调用。")])]),t._v(" "),s("li",[s("p",[t._v("beforeDestroy (销毁前） 在实例销毁之前调用。实例仍然完全可用。\ndestroyed (销毁后） 在实例销毁之后调用。调用后，所有的事件监听器会被移除，所有的子实例也会被销毁。该钩子在服务器端渲染期间不被调用。")])]),t._v(" "),s("li",[s("p",[t._v("activated keep-alive 专属，组件被激活时调用")])]),t._v(" "),s("li",[s("p",[t._v("deactivated keep-alive 专属，组件被退出时调用")])])]),t._v(" "),s("blockquote",[s("p",[t._v("异步请求在哪一步发起？")])]),t._v(" "),s("p",[t._v("可以在钩子函数 created、beforeMount、mounted 中进行异步请求，因为在这三个钩子函数中，data 已经创建，可以将服务端端返回的数据进行赋值。\n如果异步请求不需要依赖 Dom 推荐在 created 钩子函数中调用异步请求，因为在 created 钩子函数中调用异步请求有以下优点：")]),t._v(" "),s("ul",[s("li",[t._v("能更快获取到服务端数据，减少页面 loading 时间；")]),t._v(" "),s("li",[t._v("ssr 不支持 beforeMount 、mounted 钩子函数，所以放在 created 中有助于一致性；")])]),t._v(" "),s("h2",{attrs:{id:"_3-data-为什么是一个函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-data-为什么是一个函数"}},[t._v("#")]),t._v(" 3. "),s("font",{attrs:{color:"red",size:"6px"}},[t._v("data")]),t._v(" 为什么是一个函数")],1),t._v(" "),s("p",[t._v("组件中的 data 写成一个函数，数据以函数返回值形式定义，这样每复用一次组件，就会返回一份新的 data，类似于给每个组件实例创建一个私有的数据空间，让各个组件实例维护各自的数据。而单纯的写成对象形式，就使得所有组件实例共用了一份 data，就会造成一个变了全都会变的结果")]),t._v(" "),s("h2",{attrs:{id:"_4-双向数据绑定原理是什么-响应式原理又是啥-还有-v-model-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-双向数据绑定原理是什么-响应式原理又是啥-还有-v-model-原理"}},[t._v("#")]),t._v(" 4. 双向数据绑定原理是什么 响应式原理又是啥 还有 v-model 原理")]),t._v(" "),s("blockquote",[s("p",[t._v("双向绑定：")]),t._v(" "),s("ul",[s("li",[t._v("输入框内容变化时，Data 中的数据同步变化。即 View => Data 的变化。")]),t._v(" "),s("li",[t._v("Data 中的数据变化时，文本节点的内容同步变化。即 Data => View 的变化。")])]),t._v(" "),s("p",[t._v("响应式原理：")]),t._v(" "),s("ul",[s("li",[t._v("就是指的是 Data => View 的变化原理")])]),t._v(" "),s("p",[t._v("v-model 原理：")]),t._v(" "),s("ul",[s("li",[t._v("就是指的是 View => Data")])])]),t._v(" "),s("p",[t._v("vue 是采用数据劫持结合发布者-订阅者模式的方式，通过 Object.defineProperty()来劫持各个属性的 setter，getter，在数据变动时发布消息给订阅者，触发响应的监听回调。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("View => Data\n其实就是给 input 事件绑定 oninput 事件，改变 data 里的属性的值，再触发 Data => view 去更新视图。就是 v-model 的原理")])]),t._v(" "),s("li",[s("p",[t._v("Data => view\n通过 Object.defineProperty()去劫持每一个变量的 get,set。\n在 VUE 里的话，变量一变化，set 发通知给 watcher，watcher 告知虚拟 DOM 树，叫它该比较了，我这有值变了，于是生成新的 dom 树进行一个比较，然后逐级分类比较，更新页面")]),t._v(" "),s("p",[t._v("实际上就是在劫持到 set，在里面进行 DOM 更新")])])]),t._v(" "),s("h2",{attrs:{id:"_5-diff-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-diff-算法"}},[t._v("#")]),t._v(" 5. diff 算法")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000038894967?utm_source=sf-related",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考资料"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("vue 和 react 区别\nvue 和 react 的 diff 算法，都是忽略跨级比较，只做同级比较。vue diff 时调动 patch 函数，参数是 vnode 和 oldVnode，分别代表新旧节点。")]),t._v(" "),s("ul",[s("li",[t._v("vue 比对节点，当节点元素类型相同，但是 className 不同，认为是不同类型元素，删除重建，而 react 会认为是同类型节点，只是修改节点属性")]),t._v(" "),s("li",[t._v("vue 的列表比对，采用从两端到中间的比对方式，而 react 则采用从左到右依次比对的方式。当一个集合，只是把最后一个节点移动到了第一个，react 会把前面的节点依次移动，而 vue 只会把最后一个节点移动到第一个。总体上，vue 的对比方式更高效。")])]),t._v(" "),s("h2",{attrs:{id:"_6-v-for-里的-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-v-for-里的-key"}},[t._v("#")]),t._v(" 6. v-for 里的 key")]),t._v(" "),s("blockquote",[s("p",[t._v("作用：")]),t._v(" "),s("ol",[s("li",[t._v("避免错误的就地复用，提高 diff 速度")]),t._v(" "),s("li",[t._v("防止数据混乱")]),t._v(" "),s("li",[t._v("不能用 index 做 KEY，\n"),s("a",{attrs:{href:"https://www.zhihu.com/question/61064119/answer/766607894",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考资料"),s("OutboundLink")],1),t._v(" > "),s("a",{attrs:{href:"https://segmentfault.com/a/1190000038894967?utm_source=sf-related",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考资料"),s("OutboundLink")],1)])])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在进行 diff 时，会根据头头尾尾头尾尾头的顺序进行 sameVnode 对比，如果不加 key，会导致 sameVnode 里面的 a.key === b.key 为真从而认为是相同的节点，就地复用之后取改变内容。如果是中间删除一个节点的情况是无法识别出来的，会依旧一个个按顺序对比。但如果有 key 的话，sameVnode 为 false，之后会按照 key 去旧的 node 树里寻找，移动过来。然后后面的节点全都会判断为没有改变。")])]),t._v(" "),s("li",[s("p",[t._v("v-for[1，2，3],选中 2，删掉第二个 => [1，3]不加 key 的话，会先")]),t._v(" "),s("p",[t._v("① 对比 1 = 1")]),t._v(" "),s("p",[t._v("② 对比新旧 node 的第二个，2 和 3。sameVnode 为 true，认为是相同节点，就地复用。这种就地复用会改变数组里的内容，但是如果有额外不是数组 item 里面的数据，是不会变化的。")]),t._v(" "),s("p",[t._v("③ 旧 node 王二，新 node 没了，认为王二是多出的，删去")]),t._v(" "),s("p",[t._v("④ 得到结果[1，3]。！！！！但是，现在选中的是 3，不会随着 2 去除")])])]),t._v(" "),s("h2",{attrs:{id:"_7-vue-router-钩子函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-vue-router-钩子函数"}},[t._v("#")]),t._v(" 7. vue-router 钩子函数")]),t._v(" "),s("ul",[s("li",[t._v("router.beforeEach 全局前置守卫 进入路由之前")]),t._v(" "),s("li",[t._v("router.beforeResolve 全局解析守卫(2.5.0+) 在 beforeRouteEnter 调用之后调用")]),t._v(" "),s("li",[t._v("router.afterEach 全局后置钩子 进入路由之后")])]),t._v(" "),s("h2",{attrs:{id:"_8-react-和-vue-的对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-react-和-vue-的对比"}},[t._v("#")]),t._v(" 8. react 和 vue 的对比")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("共同点：")]),t._v(" "),s("ul",[s("li",[t._v("都使用虚拟 dom")]),t._v(" "),s("li",[t._v("提倡组件化")]),t._v(" "),s("li",[t._v("注意力集中保持在核心库，而将其他功能如路由和全局状态管理交给相关的库。")])])]),t._v(" "),s("li",[s("p",[t._v("区别：")]),t._v(" "),s("ul",[s("li",[t._v("vue 采用 HTML 和 JS,CSS 分离的写法，更加直观。react 使用 JSX 语法")]),t._v(" "),s("li",[t._v("vue 双向绑定，react 是单向数据流")])])]),t._v(" "),s("li",[s("p",[t._v("vue 优势")]),t._v(" "),s("ul",[s("li",[t._v("简单的语法及项目创建,易于上手")]),t._v(" "),s("li",[t._v("更快的渲染速度和更小的体积")]),t._v(" "),s("li",[t._v("中国框架，文档更加完善")])])]),t._v(" "),s("li",[s("p",[t._v("React 的优势")]),t._v(" "),s("ul",[s("li",[t._v("更适用于大型应用和更好的可测试性")]),t._v(" "),s("li",[t._v("同时适用于 Web 端和原生 App")]),t._v(" "),s("li",[t._v("扩展性更强")]),t._v(" "),s("li",[t._v("支持 TS")])])]),t._v(" "),s("li",[s("p",[t._v("总结")])])]),t._v(" "),s("ul",[s("li",[t._v("当 state 特别多的时候，Watcher 会很多，会导致卡顿，所以大型应用（状态特别多的）一般用 React，更加可控。可对于易用性来说，VUE 是更容易上手的，对于项目来说新人更容易接手。")])]),t._v(" "),s("h2",{attrs:{id:"_9-父子组件的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-父子组件的生命周期"}},[t._v("#")]),t._v(" 9. 父子组件的生命周期")]),t._v(" "),s("p",[t._v("父 beforeCreate->父 created->父 beforeMount->子 beforeCreate->子 created->子 beforeMount->子 mounted->父 mounted\n总结：从外到内，再从内到外")]),t._v(" "),s("h2",{attrs:{id:"_10-组件间通讯"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-组件间通讯"}},[t._v("#")]),t._v(" 10. 组件间通讯")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("props 和$emit 父组件向子组件传递数据是通过 prop 传递的，子组件传递数据给父组件是通过$emit 触发事件来做到的")])]),t._v(" "),s("li",[s("p",[t._v("$parent,$children 获取当前组件的父组件和当前组件的子组件")])]),t._v(" "),s("li",[s("p",[t._v("$attrs 和$listeners A->B->C。Vue 2.4 开始提供了$attrs 和$listeners 来解决这个问题")])]),t._v(" "),s("li",[s("p",[t._v("父组件中通过 provide 来提供变量，然后在子组件中通过 inject 来注入变量。(官方不推荐在实际业务中使用，但是写组件库时很常用)")])]),t._v(" "),s("li",[s("p",[t._v("$refs 获取组件实例")])]),t._v(" "),s("li",[s("p",[t._v("envetBus 兄弟组件数据传递 这种情况下可以使用事件总线的方式")])])]),t._v(" "),s("h2",{attrs:{id:"_11-keep-alive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-keep-alive"}},[t._v("#")]),t._v(" 11. keep-alive")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("多了 2 个生命周期钩子")]),t._v(" "),s("p",[t._v("activated 当 keep-alive 包含的组件再次渲染的时候触发\ndeactivated 当 keep-alive 包含的组件销毁的时候触发")])]),t._v(" "),s("li",[s("p",[t._v("有 3 个属性：include(包含的组件缓存生效) 与 exclude(排除的组件不缓存，优先级大于 include) ，max 缓存组件的最大值(类型为字符或者数字,可以控制缓存组件的个数)")])]),t._v(" "),s("li",[s("p",[t._v("部分组件或者路由缓存")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("keep-alive")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("include")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-view")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("keep-alive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("或者")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在路由中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n meta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   keepAlive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要被缓存")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用时")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$route.meta.keepAlive"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 这里是会被缓存的视图组件，比如 Home！ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"!$route.meta.keepAlive"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 这里是不会被缓存的视图组件，比如 Profile！ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"_12-自定义指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-自定义指令"}},[t._v("#")]),t._v(" 12. 自定义指令")]),t._v(" "),s("blockquote",[s("p",[t._v("https://blog.csdn.net/smlljet/article/details/91874728")])]),t._v(" "),s("blockquote",[s("p",[t._v("https://zhuanlan.zhihu.com/p/64362889")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("注册方法：\n全局注册：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//main.js里")]),t._v("\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'focus'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("inserted")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("局部注册")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-test")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是名字'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  directives"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("inserted")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("binding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指令的定义")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("el为绑定元素，可以对其进行dom操作\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("binding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一个对象，包含很多属性属性")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" binding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("binding"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("钩子函数和参数")])])]),t._v(" "),s("p",[t._v("钩子函数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("bind：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。")])]),t._v(" "),s("li",[s("p",[t._v("inserted：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。")])]),t._v(" "),s("li",[s("p",[t._v("update：所在组件的 VNode 更新时调用。")])]),t._v(" "),s("li",[s("p",[t._v("componentUpdated：指令所在组件的 VNode 及其子 VNode 全部更新后调用。")])]),t._v(" "),s("li",[s("p",[t._v("unbind：只调用一次，指令与元素解绑时调用。")])])]),t._v(" "),s("p",[t._v("参数")]),t._v(" "),s("ul",[s("li",[t._v("el：指令所绑定的元素，可以用来直接操作 DOM 。")]),t._v(" "),s("li",[t._v("binding：一个对象，包含以下属性：")]),t._v(" "),s("li",[t._v("name：指令名，不包括 v- 前缀。")]),t._v(" "),s("li",[t._v("value：指令的绑定值，例如：v-my-directive=“1 + 1” 中，绑定值为 2。")]),t._v(" "),s("li",[t._v("oldValue：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。")]),t._v(" "),s("li",[t._v("expression：字符串形式的指令表达式。例如 v-my-directive=“1 + 1” 中，表达式为 “1 + 1”。")]),t._v(" "),s("li",[t._v("arg：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 “foo”。")]),t._v(" "),s("li",[t._v("modifiers：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。")]),t._v(" "),s("li",[t._v("vnode： Vue 编译生成的虚拟节点。移步 VNode API 来了解更多详情。")]),t._v(" "),s("li",[t._v("oldVnode：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用")])]),t._v(" "),s("h2",{attrs:{id:"_13-修饰符有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-修饰符有哪些"}},[t._v("#")]),t._v(" 13. 修饰符有哪些")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("事件修饰符")]),t._v(" "),s("ul",[s("li",[t._v("stop 阻止事件继续传播")]),t._v(" "),s("li",[t._v("prevent 阻止标签默认行为")]),t._v(" "),s("li",[t._v("capture 使用事件捕获模式,即元素自身触发的事件先在此处处理，然后才交由内部元素进行处理")]),t._v(" "),s("li",[t._v("self 只当在 event.target 是当前元素自身时触发处理函数")]),t._v(" "),s("li",[t._v("once 事件将只会触发一次")]),t._v(" "),s("li",[t._v("passive 告诉浏览器你不想阻止事件的默认行为")])])]),t._v(" "),s("li",[s("p",[t._v("v-model 的修饰符")]),t._v(" "),s("ul",[s("li",[s("p",[t._v(".lazy 通过这个修饰符，转变为在 change 事件再同步")])]),t._v(" "),s("li",[s("p",[t._v(".number 自动将用户的输入值转化为数值类型")])]),t._v(" "),s("li",[s("p",[t._v(".trim 自动过滤用户输入的首尾空格")])])])]),t._v(" "),s("li",[s("p",[t._v("键盘事件的修饰符")]),t._v(" "),s("ul",[s("li",[t._v(".enter")]),t._v(" "),s("li",[t._v(".tab")]),t._v(" "),s("li",[t._v(".delete (捕获“删除”和“退格”键)")]),t._v(" "),s("li",[t._v(".esc")]),t._v(" "),s("li",[t._v(".space")]),t._v(" "),s("li",[t._v(".up")]),t._v(" "),s("li",[t._v(".down")]),t._v(" "),s("li",[t._v(".left")]),t._v(" "),s("li",[t._v(".right")])])])]),t._v(" "),s("h2",{attrs:{id:"_14-函数式组件使用场景和原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-函数式组件使用场景和原理"}},[t._v("#")]),t._v(" 14. 函数式组件使用场景和原理")]),t._v(" "),s("blockquote",[s("p",[t._v("????")])]),t._v(" "),s("h2",{attrs:{id:"_15-vue-router-中常用的路由模式实现原理吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-vue-router-中常用的路由模式实现原理吗"}},[t._v("#")]),t._v(" 15. vue-router 中常用的路由模式实现原理吗")]),t._v(" "),s("blockquote",[s("p",[t._v("??")])])])}),[],!1,null,null,null);a.default=n.exports}}]);