(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{453:function(a,t,r){"use strict";r.r(t);var s=r(2),_=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("blockquote",[r("p",[a._v("前端笔记")])]),a._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul")]),r("p"),a._v(" "),r("p",[a._v("创建存储库\nshell复制代码# 创建一个新的本地存储库\n$ git init [项目名称]")]),a._v(" "),r("h1",{attrs:{id:"克隆存储库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#克隆存储库"}},[a._v("#")]),a._v(" 克隆存储库")]),a._v(" "),r("p",[a._v("$ git clone <git仓库url地址>")]),a._v(" "),r("h1",{attrs:{id:"将存储库克隆到指定目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将存储库克隆到指定目录"}},[a._v("#")]),a._v(" 将存储库克隆到指定目录")]),a._v(" "),r("p",[a._v("$ git clone <git仓库url地址> <我的文件夹>")]),a._v(" "),r("p",[a._v('配置\nscss复制代码# 设置将附加到您的提交(commit)和标签(tags)的名称\n$ git config --global user.name "name"')]),a._v(" "),r("h1",{attrs:{id:"git同步远程分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git同步远程分支"}},[a._v("#")]),a._v(" git同步远程分支")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/weixin_42143221/article/details/113716664",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://blog.csdn.net/weixin_42143221/article/details/113716664"),r("OutboundLink")],1)]),a._v(" "),r("h1",{attrs:{id:"设置将附加到您的提交-commit-和标签-tags-的电子邮件地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设置将附加到您的提交-commit-和标签-tags-的电子邮件地址"}},[a._v("#")]),a._v(" 设置将附加到您的提交(commit)和标签(tags)的电子邮件地址")]),a._v(" "),r("p",[a._v('$ git config --global user.email "email"')]),a._v(" "),r("h1",{attrs:{id:"启用-git-输出的一些着色"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#启用-git-输出的一些着色"}},[a._v("#")]),a._v(" 启用 Git 输出的一些着色")]),a._v(" "),r("p",[a._v("$ git config --global color.ui auto")]),a._v(" "),r("h1",{attrs:{id:"在文本编辑器中编辑全局配置文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在文本编辑器中编辑全局配置文件"}},[a._v("#")]),a._v(" 在文本编辑器中编辑全局配置文件")]),a._v(" "),r("p",[a._v("$ git config --global --edit")]),a._v(" "),r("p",[a._v("变更\nruby复制代码# 在工作目录中显示修改后的文件，为您的下一次提交暂存\n$ git status")]),a._v(" "),r("h1",{attrs:{id:"暂存文件-准备提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#暂存文件-准备提交"}},[a._v("#")]),a._v(" 暂存文件，准备提交")]),a._v(" "),r("p",[a._v("$ git add [file]")]),a._v(" "),r("h1",{attrs:{id:"暂存所有更改的文件-准备提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#暂存所有更改的文件-准备提交"}},[a._v("#")]),a._v(" 暂存所有更改的文件，准备提交")]),a._v(" "),r("p",[a._v("$ git add .")]),a._v(" "),r("h1",{attrs:{id:"将所有暂存文件提交到版本化历史记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将所有暂存文件提交到版本化历史记录"}},[a._v("#")]),a._v(" 将所有暂存文件提交到版本化历史记录")]),a._v(" "),r("p",[a._v('$ git commit -m "commit message"')]),a._v(" "),r("h1",{attrs:{id:"将所有跟踪的文件提交到版本化历史记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将所有跟踪的文件提交到版本化历史记录"}},[a._v("#")]),a._v(" 将所有跟踪的文件提交到版本化历史记录")]),a._v(" "),r("p",[a._v('$ git commit -am "commit message"')]),a._v(" "),r("h1",{attrs:{id:"取消暂存文件-保留文件更改"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#取消暂存文件-保留文件更改"}},[a._v("#")]),a._v(" 取消暂存文件，保留文件更改")]),a._v(" "),r("p",[a._v("$ git reset [file]")]),a._v(" "),r("h1",{attrs:{id:"将所有内容恢复到最后一次提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将所有内容恢复到最后一次提交"}},[a._v("#")]),a._v(" 将所有内容恢复到最后一次提交")]),a._v(" "),r("p",[a._v("$ git reset --hard")]),a._v(" "),r("h1",{attrs:{id:"已更改但未暂存-staged-的内容的差异"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#已更改但未暂存-staged-的内容的差异"}},[a._v("#")]),a._v(" 已更改但未暂存（staged）的内容的差异")]),a._v(" "),r("p",[a._v("$ git diff")]),a._v(" "),r("h1",{attrs:{id:"已暂存-staged-但尚未提交的内容的差异"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#已暂存-staged-但尚未提交的内容的差异"}},[a._v("#")]),a._v(" 已暂存（staged）但尚未提交的内容的差异")]),a._v(" "),r("p",[a._v("$ git diff --staged")]),a._v(" "),r("h1",{attrs:{id:"在指定之前应用当前分支的任何提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在指定之前应用当前分支的任何提交"}},[a._v("#")]),a._v(" 在指定之前应用当前分支的任何提交")]),a._v(" "),r("p",[a._v("$ git rebase [branch]")]),a._v(" "),r("p",[a._v("分支\nruby复制代码# 列出所有本地分支\n$ git branch")]),a._v(" "),r("h1",{attrs:{id:"列出所有分支-本地和远程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#列出所有分支-本地和远程"}},[a._v("#")]),a._v(" 列出所有分支，本地和远程")]),a._v(" "),r("p",[a._v("$ git branch -av")]),a._v(" "),r("h1",{attrs:{id:"切换到-my-branch-并更新工作目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#切换到-my-branch-并更新工作目录"}},[a._v("#")]),a._v(" 切换到 my_branch，并更新工作目录")]),a._v(" "),r("p",[a._v("$ git checkout my_branch")]),a._v(" "),r("h1",{attrs:{id:"创建一个名为-new-branch-的新分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建一个名为-new-branch-的新分支"}},[a._v("#")]),a._v(" 创建一个名为 new_branch 的新分支")]),a._v(" "),r("p",[a._v("$ git checkout -b new_branch")]),a._v(" "),r("h1",{attrs:{id:"删除名为-my-branch-的分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#删除名为-my-branch-的分支"}},[a._v("#")]),a._v(" 删除名为 my_branch 的分支")]),a._v(" "),r("p",[a._v("$ git branch -d my_branch")]),a._v(" "),r("h1",{attrs:{id:"将-brancha-分支合并到-branchb-分之上"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将-brancha-分支合并到-branchb-分之上"}},[a._v("#")]),a._v(" 将 branchA 分支合并到 branchB 分之上")]),a._v(" "),r("p",[a._v("$ git checkout branchB\n$ git merge branchA")]),a._v(" "),r("h1",{attrs:{id:"标记当前提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#标记当前提交"}},[a._v("#")]),a._v(" 标记当前提交")]),a._v(" "),r("p",[a._v("$ git tag my_tag")]),a._v(" "),r("h1",{attrs:{id:"重命名为-new-name"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#重命名为-new-name"}},[a._v("#")]),a._v(" 重命名为 new_name")]),a._v(" "),r("p",[a._v("$ git branch -m <new_name>")]),a._v(" "),r("h1",{attrs:{id:"推送和重置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#推送和重置"}},[a._v("#")]),a._v(" 推送和重置")]),a._v(" "),r("p",[a._v("$ git push origin -u <new_name>")]),a._v(" "),r("h1",{attrs:{id:"删除远程分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[a._v("#")]),a._v(" 删除远程分支")]),a._v(" "),r("p",[a._v("$ git push origin --delete "),r("old")],1),a._v(" "),r("p",[a._v("观察存储库\nshell复制代码# 显示当前活动分支的提交历史\n$ git log")]),a._v(" "),r("h1",{attrs:{id:"显示-brancha-上不在-branchb-上的提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#显示-brancha-上不在-branchb-上的提交"}},[a._v("#")]),a._v(" 显示 branchA 上不在 branchB 上的提交")]),a._v(" "),r("p",[a._v("$ git log branchB..branchA")]),a._v(" "),r("h1",{attrs:{id:"显示更改文件的提交-即使重命名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#显示更改文件的提交-即使重命名"}},[a._v("#")]),a._v(" 显示更改文件的提交，即使重命名")]),a._v(" "),r("p",[a._v("$ git log --follow [file]")]),a._v(" "),r("h1",{attrs:{id:"显示-brancha-中的内容与-branchb-中的差异"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#显示-brancha-中的内容与-branchb-中的差异"}},[a._v("#")]),a._v(" 显示 branchA 中的内容与 branchB 中的差异")]),a._v(" "),r("p",[a._v("$ git diff branchB...branchA")]),a._v(" "),r("h1",{attrs:{id:"在-git-中以-人类可读-格式显示任何对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在-git-中以-人类可读-格式显示任何对象"}},[a._v("#")]),a._v(" 在 Git 中以 人类可读 格式显示任何对象")]),a._v(" "),r("p",[a._v("$ git show [SHA]")]),a._v(" "),r("h1",{attrs:{id:"按内容搜索更改"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#按内容搜索更改"}},[a._v("#")]),a._v(" 按内容搜索更改")]),a._v(" "),r("p",[a._v("$ git log -S'"),r("a",{attrs:{term:"",in:"",the:"",source:""}},[a._v("'")])]),a._v(" "),r("h1",{attrs:{id:"显示特定文件随时间的变化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#显示特定文件随时间的变化"}},[a._v("#")]),a._v(" 显示特定文件随时间的变化")]),a._v(" "),r("p",[a._v("$ git log -p <file_name>")]),a._v(" "),r("h1",{attrs:{id:"打印出很酷的日志可视化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#打印出很酷的日志可视化"}},[a._v("#")]),a._v(" 打印出很酷的日志可视化")]),a._v(" "),r("p",[a._v("$ git log --pretty=oneline --graph --decorate --all")]),a._v(" "),r("p",[a._v("同步\nruby复制代码# 从该 Git 远程获取所有分支\n$ git fetch [alias]")]),a._v(" "),r("h1",{attrs:{id:"将远程分支合并到当前分支以使其保持最新状态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将远程分支合并到当前分支以使其保持最新状态"}},[a._v("#")]),a._v(" 将远程分支合并到当前分支以使其保持最新状态")]),a._v(" "),r("p",[a._v("$ git merge [alias]/[branch]\nNo fast-forward\n$ git merge --no-ff [alias]/[branch]\nOnly fast-forward\n$ git merge --ff-only [alias]/[branch]")]),a._v(" "),r("h1",{attrs:{id:"将本地分支提交传输到远程存储库分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将本地分支提交传输到远程存储库分支"}},[a._v("#")]),a._v(" 将本地分支提交传输到远程存储库分支")]),a._v(" "),r("p",[a._v("$ git push [alias] [branch]")]),a._v(" "),r("h1",{attrs:{id:"从跟踪远程分支获取并合并任何提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#从跟踪远程分支获取并合并任何提交"}},[a._v("#")]),a._v(" 从跟踪远程分支获取并合并任何提交")]),a._v(" "),r("p",[a._v("$ git pull")]),a._v(" "),r("h1",{attrs:{id:"将另一个分支的一个特定提交合并到当前分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将另一个分支的一个特定提交合并到当前分支"}},[a._v("#")]),a._v(" 将另一个分支的一个特定提交合并到当前分支")]),a._v(" "),r("p",[a._v("$ git cherry-pick [commit_id]")]),a._v(" "),r("p",[a._v("远程\nshell复制代码# 添加一个 git URL 作为别名(alias)\n$ git remote add [alias] [url]")]),a._v(" "),r("h1",{attrs:{id:"显示您设置的远程存储库的名称"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#显示您设置的远程存储库的名称"}},[a._v("#")]),a._v(" 显示您设置的远程存储库的名称")]),a._v(" "),r("p",[a._v("$ git remote")]),a._v(" "),r("h1",{attrs:{id:"显示远程存储库的名称和-url"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#显示远程存储库的名称和-url"}},[a._v("#")]),a._v(" 显示远程存储库的名称和 URL")]),a._v(" "),r("p",[a._v("$ git remote -v")]),a._v(" "),r("h1",{attrs:{id:"删除远程存储库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#删除远程存储库"}},[a._v("#")]),a._v(" 删除远程存储库")]),a._v(" "),r("p",[a._v("$ git remote rm [remote repo name]")]),a._v(" "),r("h1",{attrs:{id:"更改-git-repo-的-url"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更改-git-repo-的-url"}},[a._v("#")]),a._v(" 更改 git repo 的 URL")]),a._v(" "),r("p",[a._v("$ git remote set-url origin [git_url]")]),a._v(" "),r("p",[a._v("临时提交\nruby复制代码# 保存已修改和分阶段的更改\n$ git stash")]),a._v(" "),r("h1",{attrs:{id:"列出隐藏文件更改的堆栈顺序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#列出隐藏文件更改的堆栈顺序"}},[a._v("#")]),a._v(" 列出隐藏文件更改的堆栈顺序")]),a._v(" "),r("p",[a._v("$ git stash list")]),a._v(" "),r("h1",{attrs:{id:"从存储堆栈顶部编写工作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#从存储堆栈顶部编写工作"}},[a._v("#")]),a._v(" 从存储堆栈顶部编写工作")]),a._v(" "),r("p",[a._v("$ git stash pop")]),a._v(" "),r("h1",{attrs:{id:"丢弃存储堆栈顶部的更改"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#丢弃存储堆栈顶部的更改"}},[a._v("#")]),a._v(" 丢弃存储堆栈顶部的更改")]),a._v(" "),r("p",[a._v("$ git stash drop")]),a._v(" "),r("p",[a._v("跟踪路径更改\nshell复制代码# 从项目中删除文件并暂存删除以进行提交\n$ git rm [file]")]),a._v(" "),r("h1",{attrs:{id:"更改现有文件路径并暂存移动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更改现有文件路径并暂存移动"}},[a._v("#")]),a._v(" 更改现有文件路径并暂存移动")]),a._v(" "),r("p",[a._v("$ git mv [existing-path] [new-path]")]),a._v(" "),r("h1",{attrs:{id:"显示所有提交日志-并指示任何移动的路径"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#显示所有提交日志-并指示任何移动的路径"}},[a._v("#")]),a._v(" 显示所有提交日志，并指示任何移动的路径")]),a._v(" "),r("p",[a._v("$ git log --stat -M")]),a._v(" "),r("p",[a._v("忽略文件\n.gitignore 文件指定了 Git 应该忽略的故意未跟踪的文件\nbash复制代码/logs/*")]),a._v(" "),r("h1",{attrs:{id:"意思是不要忽视"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#意思是不要忽视"}},[a._v("#")]),a._v(' "!" 意思是不要忽视')]),a._v(" "),r("p",[a._v("!logs/.gitkeep")]),a._v(" "),r("h1",{attrs:{id:"忽略-mac-系统文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#忽略-mac-系统文件"}},[a._v("#")]),a._v(" 忽略 Mac 系统文件")]),a._v(" "),r("p",[a._v(".DS_store")]),a._v(" "),r("h1",{attrs:{id:"忽略-node-modules-文件夹"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#忽略-node-modules-文件夹"}},[a._v("#")]),a._v(" 忽略 node_modules 文件夹")]),a._v(" "),r("p",[a._v("node_modules")]),a._v(" "),r("h1",{attrs:{id:"忽略-sass-配置文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#忽略-sass-配置文件"}},[a._v("#")]),a._v(" 忽略 SASS 配置文件")]),a._v(" "),r("p",[a._v(".sass-cache")]),a._v(" "),r("p",[a._v("分支\nruby复制代码# 列出所有分支及其上游\n$ git branch -vv")]),a._v(" "),r("h1",{attrs:{id:"快速切换到上一个分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#快速切换到上一个分支"}},[a._v("#")]),a._v(" 快速切换到上一个分支")]),a._v(" "),r("p",[a._v("$ git checkout -")]),a._v(" "),r("h1",{attrs:{id:"只获取远程分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#只获取远程分支"}},[a._v("#")]),a._v(" 只获取远程分支")]),a._v(" "),r("p",[a._v("$ git branch -r")]),a._v(" "),r("h1",{attrs:{id:"从另一个分支签出单个文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#从另一个分支签出单个文件"}},[a._v("#")]),a._v(" 从另一个分支签出单个文件")]),a._v(" "),r("p",[a._v("$ git checkout "),r("branch",[a._v(" -- "),r("file")],1)],1)])}),[],!1,null,null,null);t.default=_.exports}}]);