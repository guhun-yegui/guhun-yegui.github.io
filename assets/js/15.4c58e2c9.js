(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{423:function(t,e,_){"use strict";_.r(e);var o=_(2),s=Object(o.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("blockquote",[_("p",[t._v("框架 部分")]),t._v(" "),_("p",[t._v("vue 系列 https://juejin.cn/post/6961222829979697165?utm_source=gold_browser_extension")])]),t._v(" "),_("p"),_("div",{staticClass:"table-of-contents"},[_("ul",[_("li",[_("a",{attrs:{href:"#_1-虚拟-dom-的优缺点"}},[t._v("1. 虚拟 dom 的优缺点")])])])]),_("p"),t._v(" "),_("h2",{attrs:{id:"_1-虚拟-dom-的优缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-虚拟-dom-的优缺点"}},[t._v("#")]),t._v(" 1. 虚拟 dom 的优缺点")]),t._v(" "),_("p",[t._v("优点：")]),t._v(" "),_("ul",[_("li",[t._v("保证性能下限: 虚拟 DOM 可以经过 diff 找出最小差异,然后批量进行 patch,这种操作虽然比不上手动优化,但是比起粗暴的 DOM 操作性能要好很多,因此虚拟 DOM 可以保证性能下限")]),t._v(" "),_("li",[t._v("无需手动操作 DOM: 虚拟 DOM 的 diff 和 patch 都是在一次更新中自动进行的,我们无需手动操作 DOM,代码更简洁，极大提高开发效率")]),t._v(" "),_("li",[t._v("跨平台: 虚拟 DOM 本质上是 JavaScript 对象,而 DOM 与平台强相关,相比之下虚拟 DOM 可以进行更方便地跨平台操作,例如服务器渲染、移动端开发等等")]),t._v(" "),_("li",[t._v("可以实现 MVVM，双向数据流")])]),t._v(" "),_("p",[t._v("缺点:")]),t._v(" "),_("ul",[_("li",[t._v("无法进行极致优化: 在一些性能要求极高的应用中虚拟 DOM 无法进行针对性的极致优化，比如 VScode 采用直接手动操作 DOM 的方式进行极端的性能优化")])])])}),[],!1,null,null,null);e.default=s.exports}}]);