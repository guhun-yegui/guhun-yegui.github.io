(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{400:function(t,_,e){"use strict";e.r(_);var v=e(3),s=Object(v.a)({},(function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("面试题之 http 部分")])]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#_1-get-和-post-的区别"}},[t._v("1.GET 和 POST 的区别")])]),e("li",[e("a",{attrs:{href:"#_2-网页从输入网址到渲染完成经历了哪些过程"}},[t._v("2.网页从输入网址到渲染完成经历了哪些过程？")])]),e("li",[e("a",{attrs:{href:"#_3-存储方式"}},[t._v("3. 存储方式")])]),e("li",[e("a",{attrs:{href:"#_4-xss-和-csrf"}},[t._v("4.XSS 和 CSRF")])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"_1-get-和-post-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-get-和-post-的区别"}},[t._v("#")]),t._v(" 1.GET 和 POST 的区别")]),t._v(" "),e("ol",[e("li",[t._v("GET 请求在浏览器回退和刷新时是无害的，而 POST 请求会告知用户数据会被重新提交；")]),t._v(" "),e("li",[t._v("GET 请求可以收藏为书签，POST 请求不可以收藏为书签；")]),t._v(" "),e("li",[t._v("GET 请求可以被缓存，POST 请求不可以被缓存，除非在响应头中包含合适的 Cache-Control/Expires 字段，但是不建议缓存 POST 请求，其不满足幂等性，每次调用都会对服务器资源造成影响；")]),t._v(" "),e("li",[t._v("GET 请求一般不具有请求体，因此只能进行 url 编码，而 POST 请求支持多种编码方式。")]),t._v(" "),e("li",[t._v("GET 请求的参数可以被保留在浏览器的历史中，POST 请求不会被保留；")]),t._v(" "),e("li",[t._v("GET 请求因为是向 URL 添加数据，不同的浏览器厂商，代理服务器，web 服务器都可能会有自己的长度限制，而 POST 请求无长度限制；")]),t._v(" "),e("li",[t._v("GET 请求只允许 ASCII 字符，POST 请求无限制，支持二进制数据；")]),t._v(" "),e("li",[t._v("GET 请求的安全性较差，数据被暴露在浏览器的 URL 中，所以不能用来传递敏感信息，POST 请求的安全性较好，数据不会暴露在 URL 中；")]),t._v(" "),e("li",[t._v("GET 请求具有幂等性(多次请求不会对资源造成影响)，POST 请求不幂等；")]),t._v(" "),e("li",[t._v('GET 请求一般不具有请求体，请求中一般不包含 100-continue 协议，所以只会发一次请求，而 POST 请求在发送数据到服务端之前允许双方"握手"，客户端先发送 Expect:100-continue 消息，询问服务端是否愿意接收数据，接收到服务端正确的 100-continue 应答后才会将请求体发送给服务端，服务端再响应 200 返回数据。')])]),t._v(" "),e("h2",{attrs:{id:"_2-网页从输入网址到渲染完成经历了哪些过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-网页从输入网址到渲染完成经历了哪些过程"}},[t._v("#")]),t._v(" 2.网页从输入网址到渲染完成经历了哪些过程？")]),t._v(" "),e("ul",[e("li",[t._v("大致可以分为如下 7 步：")])]),t._v(" "),e("ol",[e("li",[t._v("输入网址进行 url 解析；")]),t._v(" "),e("li",[t._v("根据 dns 系统获取域名对应的 web 服务器对应的 ip 地址；")]),t._v(" "),e("li",[t._v("与 web 服务器建立 TCP 连接，三次握手；")]),t._v(" "),e("li",[t._v("浏览器向 web 服务器发送 http 请求；")]),t._v(" "),e("li",[t._v("web 服务器响应请求，并返回指定 url 的数据（或错误信息，或重定向的新的 url 地址）；")]),t._v(" "),e("li",[t._v("浏览器下载 web 服务器返回的数据及解析 html 源文件；")]),t._v(" "),e("li",[t._v("生成 DOM 树，解析 css 和 js，渲染页面，直至显示完成；")])]),t._v(" "),e("h2",{attrs:{id:"_3-存储方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-存储方式"}},[t._v("#")]),t._v(" 3. 存储方式")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("cookies 缺点有在请求头上带着数据，大小是 4k 之内")])]),t._v(" "),e("li",[e("p",[t._v("localstorage\n以键值对(Key-Value)的方式存储，永久存储，永不失效，除非手动删除。\n每个域名 5M（谷歌），其他 10M\ngetItem //取记录\nsetIten//设置记录\nremoveItem//移除记录\nkey//取 key 所对应的值\nclear//清除记录")])]),t._v(" "),e("li",[e("p",[t._v("sessionstorage\nHTML5 的本地存储 API 中的 localStorage 与 sessionStorage 在使用方法上是相同的，区别在于 sessionStorage 在关闭页面后即被清空，而 localStorage 则会一直保存。")])])]),t._v(" "),e("h2",{attrs:{id:"_4-xss-和-csrf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-xss-和-csrf"}},[t._v("#")]),t._v(" 4.XSS 和 CSRF")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("XSS 脚本注入 通过表单文本等途径向服务器里提交有害 SQL 或者 JS，例如在登陆里填写")]),t._v(" "),e("p",[e("code",[t._v("<script src=//xxxx.cn/image/t.js><\/script>")])])]),t._v(" "),e("li",[e("p",[t._v("CSRF：跨站/跨域攻击 获得登陆信息后，在其他网站调用此网站的接口，进行操作")])]),t._v(" "),e("li",[e("p",[t._v("区别一\nXSS：不需要登录。\nCSRF：需要用户先登录网站 A，获取 cookie。")])]),t._v(" "),e("li",[e("p",[t._v("区别二（原理的区别）\nXSS：是向网站 A 注入 JS 代码，然后执行 JS 里的代码，篡改网站 A 的内容。\nCSRF：是利用网站 A 本身的漏洞，去请求网站 A 的 api。")])])]),t._v(" "),e("p",[t._v("对策：XSS 提交的内容要进行过滤验证等\nCSRF：token 验证，Referer 判断来源网站 验证。")])])}),[],!1,null,null,null);_.default=s.exports}}]);